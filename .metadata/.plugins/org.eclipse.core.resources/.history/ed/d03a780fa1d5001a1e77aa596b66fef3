package hyewon.bfs_n_dfs_3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class problem_2589 {
	static int n,m,d;
	static int result=0;
	static char[][] arr;
	static int[][] cnt;
	static boolean[][] visited;
	static int[] dx = {1,-1,0,0};
	static int[] dy = {0,0,1,-1};
	static class Dot{
		int x;
		int y;	
		public Dot(int x, int y){
			this.x = x;
			this.y = y;
		}
	}
	public static void main(String[] args)throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		arr = new char[n][m];
		
		for(int i=0; i<n; i++){
			String str = br.readLine();
			for(int j=0; j<m; j++){
				arr[i][j] = str.charAt(j);
			}
		}
		
		bfs(n,m);
		System.out.println(result);

	}
	public static void bfs(int n,int m){
		LinkedList<Dot>q = new LinkedList<>();
		visited = new boolean[n][m];
		cnt = new int[n][m];
		for(int i=0; i<n; i++){
			for(int j=0; j<m; j++){
				if(arr[n][m]=='L'){
					q.add(new Dot(n,m));  // 큐 초기화
					visited[n][m] = true;
				}
			}
		}
		
		while(!q.isEmpty()){
			Dot dot = q.poll();
			int x = dot.x;
			int y = dot.y;
			for(int i=0; i<4; i++){
				int nextx = x + dx[i];
				int nexty = y + dy[i];
				if(nextx>=0 && nextx<n && nexty>=0 && nexty<m && !visited[nextx][nexty]){
					if(arr[nextx][nexty]=='L'){
						q.add(new Dot(nextx,nexty));
						cnt[nextx][nexty] = cnt[x][y] + 1;
						visited[nextx][nexty] = true;
						result = Math.max(result, cnt[nextx][nexty]);
					}	
				}
			}
			
		}
	}

}
