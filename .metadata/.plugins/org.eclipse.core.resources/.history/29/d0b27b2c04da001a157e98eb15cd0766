package hyewon.trie;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class trie_14425 {
	static int t,n;
	static final int NUM = 26;
	static class TrieNode{
		TrieNode[] child;
		boolean isEnd;
		
		public TrieNode(){
			this.child = new TrieNode[26];
			this.isEnd = false;
			for (int i = 0; i < NUM; ++i)
                child[i] = null;
		}
	}
	static TrieNode root;
	
	static void insert(String key){
		TrieNode trie = root;
		int length = key.length();
		int level,index;
		
		for(int i=0; i<length; i++){
			index = key.charAt(i) - '0';
			if(trie.child[index] == null){
				trie.child[index] = new TrieNode();
			}
			trie = trie.child[index];
		}
		trie.isEnd = true;
	}
	static boolean search(String key){
		int length = key.length();
		int index;
		TrieNode trie = root;
		
		for(int i=0; i<length; i++){
			index = key.charAt(i) - 'a';
			
			if(trie.isEnd)
				return false;
			
			trie = trie.child[index];
		}
		return true;
	}

	public static void main(String[] args)throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		int cnt =0;
		String[] s = new String[n];
		String[] check = new String[m];
		
		
		for(int i=0; i<n; i++){
			st = new StringTokenizer(br.readLine());
			s[i] = st.nextToken();
			insert(s[i]);
		}
		
		for(int i=0; i<m; i++){
			st = new StringTokenizer(br.readLine());
			check[i] = st.nextToken();
			if(search(check[i])){
				cnt++;
			}
		}
		
		System.out.println(cnt);
		


	}

}
